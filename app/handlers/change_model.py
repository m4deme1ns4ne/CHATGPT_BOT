from aiogram import F, Router, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from loguru import logger

from app.logger import file_logger
from app import cmd_message
import app.keyboards as kb
from app.database.db import (
    DatabaseConfig, DatabaseConnection, UserManagement
)
from app.handlers.states import GPTState


router = Router()

file_logger()


@logger.catch
@router.message(F.text.in_(["–ü–æ–º–µ–Ω—è—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å ‚Ü©Ô∏è", "–í—ã–±—Ä–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å üß†"]))
async def change_gpt_model(message: Message, state: FSMContext, bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª-–≤–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        bot (Bot): –ë–æ—Ç
    """
    try:

        telegram_id = message.from_user.id

        config = DatabaseConfig()
        connection = DatabaseConnection(config)
        user_manager = UserManagement(connection)

        count_gpt_4o_mini = await user_manager.get_users_call_data(
                                                   telegram_id=telegram_id, 
                                                   model="gpt-4o-mini")
        count_gpt_4o = await user_manager.get_users_call_data(
                                                   telegram_id=telegram_id, 
                                                   model="gpt-4o")
        count_gpt_4o_mini_free = await user_manager.get_users_call_data(
                                                   telegram_id=telegram_id, 
                                                   model="gpt-4o-mini-free")

        await message.answer(f"""–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å ü§ñ\n\n–û—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–æ–ª-–≤–æ –ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:\n\n*CHAT GPT 4o mini: {count_gpt_4o_mini[0]}*\n*CHAT GPT 4o: {count_gpt_4o[0]}*\n\n–û—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–æ–ª-–≤–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:\n\n*CHAT GPT 4o mini: {count_gpt_4o_mini_free[0]}*""", 
                             reply_markup=kb.main,
                             parse_mode=ParseMode.MARKDOWN)
        await state.set_state(GPTState.selecting_model)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –º–æ–¥–µ–ª–∏
    except Exception as err:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: {err}")
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=message.message_id,
            text=cmd_message.error_message,
            reply_markup=kb.report_an_error
            )
        return
