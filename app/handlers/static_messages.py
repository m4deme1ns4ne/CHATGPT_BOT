from aiogram import F, Router, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from loguru import logger

from app.logger import file_logger
from app import cmd_message
import app.keyboards as kb
from app.handlers.states import GPTState


router = Router()

file_logger()


@logger.catch
@router.message(F.text.in_(["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è", "/start", "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"]))
async def cmd_start(message: Message, state: FSMContext, bot: Bot):
    await message.answer(cmd_message.start_message, reply_markup=kb.most_high_main)
    await state.clear()  # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    await state.set_state(GPTState.selecting_model)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏

@logger.catch
@router.message(F.text == "–ö–∞–∫—É—é –≤—ã–±—Ä–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å ü§î")
async def which_neural_network_to_choose(message: Message):
    await message.reply(cmd_message.about_message,
                        parse_mode=ParseMode.MARKDOWN)

@router.message(F.text == "F.A.Q ‚ùì")
async def comman_faq(message: Message, state: FSMContext, bot: Bot):
    await message.reply(cmd_message.faq,
                        parse_mode=ParseMode.MARKDOWN)

@router.message(F.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ üëÄ")
async def watch_code(message: Message):
    await message.reply(cmd_message.watch_code,
                        parse_mode=ParseMode.MARKDOWN,
                        disable_web_page_preview=True)
